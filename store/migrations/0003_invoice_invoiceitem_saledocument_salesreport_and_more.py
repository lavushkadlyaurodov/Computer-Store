# Generated by Django 5.2.1 on 2025-05-29 14:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0002_document_cash_register'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, unique=True, verbose_name='Номер')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачен')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Счет',
                'verbose_name_plural': 'Счета',
                'ordering': ['-date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Позиция счета',
                'verbose_name_plural': 'Позиции счетов',
            },
        ),
        migrations.CreateModel(
            name='SaleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cashless', 'Безналичная продажа'), ('cash', 'Наличная продажа'), ('return', 'Возврат товара')], max_length=10, verbose_name='Тип')),
                ('number', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Номер')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('cash_register', models.CharField(blank=True, max_length=50, verbose_name='Номер кассы/отдела')),
                ('reason', models.TextField(blank=True, verbose_name='Причина возврата')),
            ],
            options={
                'verbose_name': 'Документ продажи',
                'verbose_name_plural': 'Документы продаж',
                'ordering': ['-date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='SalesReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('all', 'Все продажи'), ('cashless', 'Безналичный расчет'), ('cash', 'Наличный расчет'), ('return', 'Возвраты')], default='all', max_length=10, verbose_name='Тип отчета')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания отчета')),
            ],
            options={
                'verbose_name': 'Отчет о продажах',
                'verbose_name_plural': 'Отчеты о продажах',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='document',
            name='customer',
        ),
        migrations.RemoveField(
            model_name='document',
            name='parent_doc',
        ),
        migrations.AlterModelOptions(
            name='customer',
            options={'verbose_name': 'Покупатель', 'verbose_name_plural': 'Покупатели'},
        ),
        migrations.AlterModelOptions(
            name='documentitem',
            options={'verbose_name': 'Позиция документа', 'verbose_name_plural': 'Позиции документов'},
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['name'], 'verbose_name': 'Товар', 'verbose_name_plural': 'Товары'},
        ),
        migrations.RemoveField(
            model_name='documentitem',
            name='amount',
        ),
        migrations.RemoveField(
            model_name='product',
            name='is_component',
        ),
        migrations.AddField(
            model_name='customer',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Дата создания'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='documentitem',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Дата создания'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Дата создания'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Дата обновления'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='contact',
            field=models.CharField(blank=True, max_length=255, verbose_name='Контакты'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='is_company',
            field=models.BooleanField(default=False, verbose_name='Юр.лицо'),
        ),
        migrations.AlterField(
            model_name='documentitem',
            name='price',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена'),
        ),
        migrations.AlterField(
            model_name='documentitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.product', verbose_name='Товар'),
        ),
        migrations.AlterField(
            model_name='documentitem',
            name='quantity',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество'),
        ),
        migrations.AlterField(
            model_name='product',
            name='quantity',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Остаток'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['name'], name='store_custo_name_4e38d0_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['is_company'], name='store_custo_is_comp_571477_idx'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.customer', verbose_name='Покупатель'),
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.invoice', verbose_name='Счет'),
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='saledocument',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.customer', verbose_name='Покупатель'),
        ),
        migrations.AddField(
            model_name='saledocument',
            name='invoice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sale_documents', to='store.invoice', verbose_name='Счет'),
        ),
        migrations.AddField(
            model_name='saledocument',
            name='original_sale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='returns', to='store.saledocument', verbose_name='Оригинальная продажа'),
        ),
        migrations.AlterField(
            model_name='documentitem',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.saledocument', verbose_name='Документ'),
        ),
        migrations.AddConstraint(
            model_name='documentitem',
            constraint=models.UniqueConstraint(fields=('document', 'product'), name='unique_product_per_document'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['date'], name='store_invoi_date_cd00db_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['is_paid'], name='store_invoi_is_paid_1961cd_idx'),
        ),
        migrations.AddConstraint(
            model_name='invoiceitem',
            constraint=models.UniqueConstraint(fields=('invoice', 'product'), name='unique_invoice_product'),
        ),
        migrations.AddIndex(
            model_name='saledocument',
            index=models.Index(fields=['type', 'date'], name='store_saled_type_e0d2e3_idx'),
        ),
        migrations.AddIndex(
            model_name='saledocument',
            index=models.Index(fields=['customer'], name='store_saled_custome_a55d6f_idx'),
        ),
        migrations.DeleteModel(
            name='Document',
        ),
    ]
